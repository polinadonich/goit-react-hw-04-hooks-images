{"version":3,"sources":["App.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","fetchImages.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","searchQuery","handleSearchQuery","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","toast","error","this","className","s","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","onChange","placeholder","Component","defaultProps","PropTypes","func","isRequired","ImageGalleryItem","webformatURL","largeImageURL","onOpenModal","onClick","target","dataset","large","src","alt","ImageGalleryItemImage","ImageGallery","imagePage","map","id","Button","Loader","loader","color","height","width","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","window","addEventListener","removeEventListener","createPortal","Overlay","bigImageUrl","API_KEY","BASE_URL","page","a","url","fetch","response","json","images","fetchImages","App","total","loading","showModal","toggleModal","formSubmitHandler","handleClickMoreImages","prevState","prevProps","fetchFirstImagePage","fetchNextImagePages","scrollTo","top","documentElement","scrollHeight","behavior","hits","length","notificationText","autoClose","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cb71738c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2FvjJ\",\"notificationText\":\"App_notificationText__2zsUh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2_mHM\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2Th2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__38gOQ\",\"Modal\":\"Modal_Modal__1q9k7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__pBg1s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__a-zud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2hhYc\"};","import { Component } from \"react\";\nimport { toast } from \"react-toastify\";\nimport s from \"./Searchbar.module.css\";\nimport PropTypes from \"prop-types\";\n// import SearchForm from \"../SearchForm\";\n\nclass Searchbar extends Component {\n  state = {\n    searchQuery: \"\",\n  };\n\n  static defaultProps = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleSearchQuery = (e) => {\n    this.setState({ searchQuery: e.currentTarget.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: \"\" });\n    if (this.state.searchQuery === \"\") {\n      toast.error(\"Please, enter your request!\");\n    }\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            onChange={this.handleSearchQuery}\n            value={searchQuery}\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n        {/* <SearchForm\n          onSubmit={this.handleSubmit}\n          onChange={this.handleSearchQuery}\n          value={searchQuery}\n        /> */}\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import PropTypes from \"prop-types\";\nimport s from \"./ImageGalleryItem.module.css\";\n\nfunction ImageGalleryItem(props) {\n  const { webformatURL, largeImageURL, onOpenModal } = props;\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        onClick={(e) => {\n          onOpenModal(e.target.dataset.large);\n        }}\n        src={webformatURL}\n        alt=\"\"\n        className={s.ImageGalleryItemImage}\n        data-large={largeImageURL}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from \"../ImageGalleryItem\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ImageGallery.module.css\";\n\nfunction ImageGallery(props) {\n  const { imagePage, onOpenModal } = props;\n\n  return (\n    <ul className={s.ImageGallery}>\n      {imagePage.map(({ id, webformatURL, largeImageURL }) => {\n        return (\n          <ImageGalleryItem\n            key={id}\n            webformatURL={webformatURL}\n            largeImageURL={largeImageURL}\n            onOpenModal={onOpenModal}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  imagePage: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      webformatURL: PropTypes.string,\n      largeImageURL: PropTypes.string,\n    })\n  ).isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from \"prop-types\";\nimport s from \"./Button.module.css\";\n\nfunction Button({ onClick }) {\n  return (\n    <button className={s.Button} type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import LoaderSpiner from \"react-loader-spinner\";\nimport s from \"./Loader.module.css\";\n\nfunction Loader() {\n  return (\n    <LoaderSpiner\n      className={s.loader}\n      type=\"Circles\"\n      color=\"#3f51b5\"\n      height={100}\n      width={100}\n    />\n  );\n}\n\nexport default Loader;\n","import { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport s from \"./Modal.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>\n          <img src={this.props.bigImageUrl} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nexport default Modal;\n","const API_KEY = \"23430004-cf3d84f40651496950214677e\";\nconst BASE_URL = \"https://pixabay.com/api\";\n\nasync function fetchImages(searchQuery, page) {\n  const url = `${BASE_URL}/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${page}&per_page=12&key=${API_KEY}`;\n\n  const response = await fetch(url);\n  const images = await response.json();\n  //   this.setState({ loading: false });\n  return images;\n}\n\nexport default fetchImages;\n","import { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport s from \"./App.module.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport Loader from \"./components/Loader\";\nimport Modal from \"./components/Modal\";\nimport fetchImages from \"./fetchImages\";\n\nclass App extends Component {\n  state = {\n    searchQuery: \"\",\n    imagePage: [],\n    page: 1,\n    total: null,\n    loading: false,\n    showModal: false,\n    bigImageUrl: \"\",\n  };\n\n  componentDidMount() {\n    // this.setState({ loading: true });\n    // const page = this.state.page;\n    // const searchQuery = this.state.searchQuery;\n    // this.fetchFirstImagePage(searchQuery, page);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const page = this.state.page;\n    const searchQuery = this.state.searchQuery;\n\n    if (prevState.searchQuery !== searchQuery) {\n      this.setState({ loading: true });\n      this.setState({ page: 1 });\n      this.setState({ imagePage: [] });\n      this.fetchFirstImagePage(searchQuery, page);\n    }\n    if (prevState.page !== page && page !== 1) {\n      this.setState({ loading: true });\n      this.fetchNextImagePages(searchQuery, page);\n    }\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }\n\n  toggleModal = (bigImageUrl) => {\n    this.setState({\n      showModal: !this.state.showModal,\n      bigImageUrl,\n    });\n  };\n\n  async fetchNextImagePages(searchQuery, page) {\n    const { hits } = await fetchImages(searchQuery, page);\n    const images = hits.map(({ id, webformatURL, largeImageURL }) => {\n      return { id, webformatURL, largeImageURL };\n    });\n    this.setState({ loading: false });\n    this.setState((prevState) => ({\n      imagePage: [...prevState.imagePage, ...images],\n    }));\n  }\n\n  async fetchFirstImagePage(searchQuery) {\n    if (!searchQuery) {\n      return;\n    }\n    const { hits, total } = await fetchImages(searchQuery, 1);\n    const images = hits.map(({ id, webformatURL, largeImageURL }) => {\n      return { id, webformatURL, largeImageURL };\n    });\n    this.setState({\n      imagePage: images,\n      total,\n      loading: false,\n    });\n  }\n\n  formSubmitHandler = (value) => {\n    this.setState({\n      searchQuery: value,\n    });\n  };\n\n  handleClickMoreImages = () => {\n    this.setState((prevState) => ({ page: prevState.page + 1 }));\n  };\n\n  render() {\n    const { searchQuery, imagePage, total, loading, showModal, bigImageUrl } =\n      this.state;\n    return (\n      <div className={s.App}>\n        <Searchbar onSubmit={this.formSubmitHandler} />\n        {imagePage.length !== 0 && (\n          <ImageGallery\n            searchQuery={searchQuery}\n            imagePage={imagePage}\n            onOpenModal={this.toggleModal}\n          />\n        )}\n        {loading && <Loader />}\n        {total > 0 && <Button onClick={this.handleClickMoreImages} />}\n        {!loading && total === 0 && (\n          <p className={s.notificationText}>\n            Sorry, we do not have any images for your request\n          </p>\n        )}\n        {showModal && (\n          <Modal onClose={this.toggleModal} bigImageUrl={bigImageUrl} />\n        )}\n        <ToastContainer\n          autoClose={2000}\n          position=\"top-right\"\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <p>Приветы</p> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3CeZo\",\"SearchForm\":\"Searchbar_SearchForm__2mJmF\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3g4Kk\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2_LZF\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1J0mv\"};"],"sourceRoot":""}